import streamlit as st
import pandas as pd
import re

@st.cache_data
def load_ins_database():
    return pd.read_csv("ins_database.csv", encoding="utf-8-sig")

@st.cache_data
def load_warnings_database():
    return pd.read_csv("warnings_database.csv", encoding="utf-8-sig")

def normalize_ins(s):
    return re.sub(r"\s+", "", str(s)).lower()

def show():
    st.title("‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏™‡∏π‡∏ï‡∏£‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö")

    # Initialize session state for dynamic fields
    if "main_ingredient_count" not in st.session_state:
        st.session_state.main_ingredient_count = 5
    
    if "ins_count" not in st.session_state:
        st.session_state.ins_count = 3
    
    # Function to add more fields
    def add_main_ingredient():
        st.session_state.main_ingredient_count += 1
    
    def add_ins():
        st.session_state.ins_count += 1

    # Main ingredients section with button on the right
    col1, col2 = st.columns([3, 1])
    with col1:
        st.subheader("‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏´‡∏•‡∏±‡∏Å")
    with col2:
        st.button("+ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏´‡∏•‡∏±‡∏Å", on_click=add_main_ingredient)
    
    main_ingredients = []
    for i in range(st.session_state.main_ingredient_count):
        main_ing = st.text_input(f"‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏´‡∏•‡∏±‡∏Å {i+1}", key=f"main_ing_{i}")
        if main_ing:
            main_ingredients.append(main_ing)
    
    # Add vertical spacing between sections
    st.write("")
    st.write("")
    
    # INS section with button on the right
    col1, col2 = st.columns([3, 1])
    with col1:
        st.subheader("‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡πÄ‡∏à‡∏∑‡∏≠‡∏õ‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£")
    with col2:
        st.button("+ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡πÄ‡∏à‡∏∑‡∏≠‡∏õ‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£", on_click=add_ins)
    
    ins_list = []
    for i in range(st.session_state.ins_count):
        ins = st.text_input(f"‡πÄ‡∏•‡∏Ç INS {i+1}", key=f"ins_{i}")
        if ins:
            ins_list.append(ins)
    
    st.markdown(
    "üîó ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏•‡∏Ç INS ‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏ß‡πá‡∏õ‡πÑ‡∏ã‡∏ï‡πå [‡∏Å‡∏≠‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£ (‡∏≠‡∏¢.)](https://alimentum.fda.moph.go.th/FDA_FOOD_MVC/Additive/Main)"
    )

    if st.button("üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏π‡∏ï‡∏£‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö"):
        ins_db = load_ins_database()
        warnings_db = load_warnings_database()

        # üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏´‡∏•‡∏±‡∏Å
        if main_ingredients:
            st.markdown("### ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏´‡∏•‡∏±‡∏Å")

            for ing in main_ingredients:
                matched = warnings_db[warnings_db["keyword"].str.strip().str.lower() == ing.lower()]
                if not matched.empty:
                    row = matched.iloc[0]
                    st.warning(f"‚ö†Ô∏è ‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö '{ing}': {row['warning']}")
                else:
                    st.success(f"‚úÖ '{ing}' ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞")

        # üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö INS
        if ins_list:
            st.markdown("### ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡πÄ‡∏à‡∏∑‡∏≠‡∏õ‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£ (INS)")

            ins_db["normalized"] = ins_db["ins_number"].astype(str).apply(normalize_ins)

            for ins in ins_list:
                ins_norm = normalize_ins(ins)
                matched = ins_db[ins_db["normalized"] == ins_norm]
                if not matched.empty:
                    row = matched.iloc[0]
                    st.warning(
                        f"‚ö†Ô∏è INS {row['ins_number']} ‡∏Ñ‡∏∑‡∏≠ {row['name_th']} ({row['function_group']}) | üìã ‡∏Ñ‡∏ß‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏â‡∏•‡∏≤‡∏Å‡∏ß‡πà‡∏≤: {row['label_required_format']}"
                    )
                else:
                    st.success(f"‚úÖ '{ins}' ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏â‡∏û‡∏≤‡∏∞ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏™‡∏î‡∏á '‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡πÄ‡∏à‡∏∑‡∏≠‡∏õ‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£ (INS {ins},...)' ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ö‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡πÄ‡∏à‡∏∑‡∏≠‡∏õ‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏∑‡πà‡∏ô‡πÜ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢")
